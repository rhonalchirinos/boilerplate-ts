// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DB_URL")
}

model User {
  id       String  @id @default(uuid()) @db.Uuid
  email    String  @unique @db.VarChar(80)
  name     String? @db.VarChar(120)
  password String? @db.VarChar(120)

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  devices  Device[]
  sessions Session[]

  @@map("users")
}

model Session {
  id      String @id @default(uuid()) @db.Uuid
  refresh String @unique @db.VarChar(36)
  sub     String @unique @db.VarChar(36)

  expiresAt DateTime?
  createdAt DateTime? @default(now())

  userId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  deviceId String? @db.Uuid
  device   Device? @relation("Device", fields: [deviceId], references: [id])

  @@map("sessions")
}

model Device {
  id        String  @id @default(uuid()) @db.Uuid
  ip        String? @db.VarChar(45)
  userAgent String? @db.Text
  platform  String? @db.VarChar(80)
  browser   String? @db.VarChar(80)
  osVersion String? @db.VarChar(80)

  userId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime? @default(now())
  sessions  Session[] @relation("Device")

  @@map("devices")
}
